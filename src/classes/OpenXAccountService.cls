// Generated by JSON2Apex http://json2apex.herokuapp.com/
//request Format : curl http://openx_server_name/ox/4.0/account/available_fields?type_full=account.network&pretty=1 --cookie "openx3_access_token=token_string"
//Document : http://docs.openx.com/api/#api_account_use_case.html

global with sharing Class OpenXAccountService {
    public String account_id;
    public String account_uid;
    public Acl_override acl_override;
    public String country_of_business;
    public String created_date;
    public String currencyValue;
    public String currency_id;
    public String deleted;
    public String experience;
    public Object external_id;
    public String hidden;
    public String id;
    public String instance_uid;
    public String modified_date;
    public String name;
    public String notes;
    public Integer revision;
    public String status;
    public String timezone;
    public String timezone_id;
    public String type;
    public String type_full;
    public String uid;
    public String v;

    public class Acl_override {
    }
    public OpenxAccountService (JSONParser parser)
    {
        while (parser.nextToken() != JSONToken.END_OBJECT) 
        {
            if (parser.getCurrentToken() == JSONToken.FIELD_NAME) 
                {
                    String text = parser.getText();                                        
                    if (parser.nextToken() != JSONToken.VALUE_NULL) 
                    {
                        if (text == 'account_id')
                        {
                            account_id=parser.getText();
                        }else if(text =='account_uid')
                        {
                            account_uid=parser.getText();
                        }else if(text =='country_of_business')
                        {
                            country_of_business=parser.getText();
                        }else if(text =='mCreated_date')
                        {
                            Created_date=parser.getText();
                        }else if(text =='currencyN')
                        {
                            currencyValue=parser.getText();
                        }else if(text =='currency_id')
                        {
                            Currency_id=parser.getText();
                        }else if(text =='experience')
                        {
                            Experience=parser.getText();
                        }else if(text =='external_id')
                        {
                            External_id=parser.getText();
                        }else if(text =='hidden')
                        {
                            Hidden=parser.getText();
                        }else if(text =='id')
                        {
                            Id=parser.getText();
                        }else if(text =='instance_uid')
                        {
                            Instance_uid=parser.getText();
                        }else if(text =='modified_date')
                        {
                            Modified_date=parser.getText();
                        }else if(text =='name')
                        {
                            Name=parser.getText();
                        }else if(text =='notes')
                        {
                            Notes=parser.getText();
                        }else if(text =='status')
                        {
                            Status=parser.getText();
                        }else if(text =='timezone')
                        {
                            Timezone=parser.getText();
                        }else if(text =='timezone_id')
                        {
                            Timezone_id=parser.getText();
                        }else if(text =='type')
                        {
                            Type=parser.getText();
                        }else if(text =='type_full')
                        {
                            Type_full=parser.getText();
                        }else if(text =='uid')
                        {
                            Uid=parser.getText();
                        }else if(text =='v')
                        {
                            v=parser.getText();
                        } 
                     }
                 }
          }
    }
//Get Account Data List from OpenX
      webService static OpenXAccountService GetAccountList(String accessApikey) {  
                String Apiendpoint= 'http://openx_server_name/ox/4.0/account?pretty=1'; 
                Http h = new Http();
                HttpRequest req = new HttpRequest();
                req.setMethod('GET');
                req.setHeader('openx3_access_token',accessApikey);
                req.setHeader('Content-Type', 'application/x-www-form-urlencoded');                       
                req.setEndpoint(Apiendpoint);                         
                HttpResponse res=new HttpResponse();
                res = h.send(req);              
                return new OpenXAccountService(System.JSON.createParser(res.getbody()));
     }
     
      //Create Account on OpenX
       webService static OpenXAccountService CreateAccount(String accessApikey,OpenXAccountService account) {
                String Apiendpoint= 'http://openx_server_name/ox/4.0/account?pretty=1';
                string jsonContent= Json.Serialize(account);                
                Http h = new Http();
                HttpRequest req = new HttpRequest();
                req.setMethod('POST');
                req.setHeader('openx3_access_token',accessApikey);
                req.setHeader('Content-Type', 'application/x-www-form-urlencoded');
                req.setBody('advertiser='+jsonContent);
                req.setEndpoint(Apiendpoint);                        
                HttpResponse res=new HttpResponse();
                res = h.send(req);
                return new OpenXAccountService(System.JSON.createParser(res.getbody()));
      }
     //Update Account on OpenX
      webService static OpenXAccountService UpdateAccount(String accessApikey,Integer id,OpenXAccountService account) {
                String Apiendpoint= 'http://openx_server_name/ox/4.0/account'+id+'?pretty=1';
                string jsonContent= Json.Serialize(account); 
                Http h = new Http();
                HttpRequest req = new HttpRequest();
                req.setMethod('PUT');
                req.setHeader('openx3_access_token',accessApikey);
                req.setHeader('Content-Type', 'application/x-www-form-urlencoded');
                req.setBody('advertiser='+jsonContent);               
                req.setEndpoint(Apiendpoint);                        
                HttpResponse res=new HttpResponse();
                res = h.send(req);
                return new OpenXAccountService(System.JSON.createParser(res.getbody()));
     } 
    
}